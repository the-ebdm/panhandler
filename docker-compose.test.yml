version: '3.8'

services:
  test-postgres:
    image: postgres:15-alpine
    container_name: panhandler-test-db
    environment:
      POSTGRES_DB: panhandler_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"  # Map to port 5433 to avoid conflicts with dev DB
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
      - ./tests/fixtures/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: |
      postgres 
      -c log_statement=all 
      -c log_destination=stderr 
      -c log_line_prefix='%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
      -c log_checkpoints=on
      -c log_connections=on
      -c log_disconnections=on
      -c log_lock_waits=on
      -c deadlock_timeout=1s
      -c log_min_duration_statement=0
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d panhandler_test"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - test-network

  # Optional: Redis for integration testing if needed later
  test-redis:
    image: redis:7-alpine
    container_name: panhandler-test-redis
    ports:
      - "6380:6379"  # Map to port 6380 to avoid conflicts
    command: redis-server --appendonly yes --appendfsync everysec
    volumes:
      - test_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - test-network

volumes:
  test_postgres_data:
    driver: local
  test_redis_data:
    driver: local

networks:
  test-network:
    driver: bridge 